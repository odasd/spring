/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2020-07-10 05:28:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t<title>채팅</title>\r\n");
      out.write("\t<style>        \r\n");
      out.write("\t\t*{font-size:10px;}        \r\n");
      out.write("\t\tbody{overflow:hidden;width:100%;height:100%;margin:0px;padding:0px;background:#D4F4FA;}        \r\n");
      out.write("\t\t#container{overflow:auto;height:87%;margin:0px;}        \r\n");
      out.write("\t\t.content{overflow:hidden; width:100%;}        \r\n");
      out.write("\t\t.content_left{float:left; margin:5px; padding:7px;border-radius:5px 5px 5px 5px;background:white;}        \r\n");
      out.write("\t\t.content_right{float:right;margin:5px;padding:7px;border-radius:5px 5px 5px 5px;background:yellow;}        \r\n");
      out.write("\t\t#bottom{position:fixed;height:10%; left:0px; right:0px;bottom:0px;padding-top:15px;text-align:center;}        \r\n");
      out.write("\t\t#txtMessage{width:70%; height:25px; margin:0px;}   \r\n");
      out.write("\t\t#btnSend{height:25px; margin:0px;}        \r\n");
      out.write("\t\tsmall{cursor:pointer; color:red;}        \r\n");
      out.write("\t\t.sdate{font-size:8px; color:blue;}    \r\n");
      out.write("\t</style>\r\n");
      out.write("\t<script src=\"http://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"container\"></div>\r\n");
      out.write("\t<div id=\"bottom\">\r\n");
      out.write("\t\t<b><span id=\"userid\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></b>\r\n");
      out.write("\t\t<input type=\"text\" id=\"txtMessage\">\r\n");
      out.write("\t\t<input type=\"button\" value=\"Send\" id=\"btnSend\">\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\tif($(\"#userid\").html()==\"\") {\r\n");
      out.write("\t\t$(\"#userid\").html(\"GUEST\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar userid=$(\"#userid\").html();\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#btnSend\").on(\"click\", function(){        \r\n");
      out.write("\t\tif($(\"#txtMessage\").val()==\"\"){             \r\n");
      out.write("\t\t\talert(\"내용을 입력하세요.\");            \r\n");
      out.write("\t\t\treturn;        \r\n");
      out.write("\t\t\t} else {            \r\n");
      out.write("\t\t\t\tsendMessage();        \r\n");
      out.write("\t\t\t\t}    \r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#txtMessage\").keydown(function(key) {\r\n");
      out.write("\t\tif(key.keyCode==13) {\r\n");
      out.write("\t\t\t$(\"#btnSend\").click();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t//websocket 관련 프로그램\r\n");
      out.write("\tvar ws = new WebSocket(\"ws://192.168.1.193:8088/websocket\");\r\n");
      out.write("\t\r\n");
      out.write("\t //메시지를 보냈을 때 발생    \r\n");
      out.write("\t function sendMessage() {        \r\n");
      out.write("\t\t var txtMessage=$(\"#txtMessage\").val();        \r\n");
      out.write("\t\t var html=\"<div class='content'>\"     \r\n");
      out.write("\t\t html += \"<p class='content_right'>\" + txtMessage + \"</p>\";        \r\n");
      out.write("\t\t html += \"</div>\"       \r\n");
      out.write("\t\t $(\"#container\").append(html);        \r\n");
      out.write("\t\t $(\"#container\").scrollTop($(\"#container\").prop(\"scrollHeight\"));        \r\n");
      out.write("\t\t ws.send(userid + \"|\" + txtMessage);        \r\n");
      out.write("\t\t $(\"#txtMessage\").val(\"\");    \r\n");
      out.write("\t\t }\r\n");
      out.write("\t \r\n");
      out.write("\t//메시지를 받았을 때 발생\r\n");
      out.write("\t ws.onmessage = function(event) {\r\n");
      out.write("\t var message = event.data.split(\"|\");\r\n");
      out.write("\t var sender = message[0];\r\n");
      out.write("\t var content = message[1];\r\n");
      out.write("\t var html = \"<div class='content'>\"\r\n");
      out.write("\t html += \"<p class='content_left'><b>\"+ sender + \"</b>: \" + content + \"</p>\";\r\n");
      out.write("\t html += \"</div>\";\r\n");
      out.write("\t $(\"#container\").append(html);\r\n");
      out.write("\t $(\"#container\").scrollTop($(\"#container\").prop(\"scrollHeight\"));\r\n");
      out.write("\t }\r\n");
      out.write("\t//웹소켓 관련 종료\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2020-07-08 07:37:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class airbnb_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t<title>숙박정보</title>\r\n");
      out.write("\t<script src=\"http://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/3.0.1/handlebars.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>[숙박정보 : 서울]</h1>\r\n");
      out.write("\t<button id=\"btnInsert\">저장</button>\r\n");
      out.write("\t<button onclick=\"location.href='air'\">찜목록</button>\r\n");
      out.write("\t<table id=\"tbl\" border=1></table>    \r\n");
      out.write("\t<script id=\"temp\" type=\"text/x-handlebars-template\"> \r\n");
      out.write("\t\t{{#each array}}\r\n");
      out.write("\t\t<tr class=\"row\">\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" class=\"chk\"></td>\r\n");
      out.write("\t\t\t<td colspan=2><img src=\"{{image}}\" width=120></td>\r\n");
      out.write("\t\t\t<td width=550>\r\n");
      out.write("\t\t\t\t<div class=\"title\"><b>{{title}}</b></div>\r\n");
      out.write("\t\t\t\t<div class=\"info\">{{info}}</div>\r\n");
      out.write("\t\t\t\t<div class=\"rating\">{{rating}}</div>\r\n");
      out.write("\t\t\t\t<div class=\"city\">{{city}}</div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t{{/each}}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("getList();\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#btnInsert\").on(\"click\", function(){\r\n");
      out.write("\t\tif(!confirm(\"저장하시겠습니까?\")) return;\r\n");
      out.write("\t\t$(\"#tbl .row .chk:checked\").each(function(){\r\n");
      out.write("\t\t\tvar row=$(this).parent().parent();\r\n");
      out.write("\t\t\tvar title=row.find(\".title\").text();\r\n");
      out.write("\t\t\tvar info=row.find(\".info\").text();\r\n");
      out.write("\t\t\tvar rating=row.find(\".rating\").text();\r\n");
      out.write("\t\t\tvar image=row.find(\"img\").attr(\"src\");\r\n");
      out.write("\t\t\tvar city=row.find(\".city\").text();\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"get\",\r\n");
      out.write("\t\t\t\turl:\"/insert\",\r\n");
      out.write("\t\t\t\tdata:{\"title\":title, \"info\":info, \"rating\":rating, \"image\":image, \"city\":city},\r\n");
      out.write("\t\t\t\tsuccess:function() {}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(this).prop(\"checked\", false);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\talert(\"저장되었습니다.\");\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction getList() {\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"get\",\r\n");
      out.write("\t\t\turl : \"/airbnb.json\",\r\n");
      out.write("\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tvar temp = Handlebars.compile($(\"#temp\").html());\r\n");
      out.write("\t\t\t\t$(\"#tbl\").html(temp(data));\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
